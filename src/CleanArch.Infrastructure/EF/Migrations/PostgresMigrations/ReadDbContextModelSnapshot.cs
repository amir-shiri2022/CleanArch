// <auto-generated />
using System;
using CleanArch.Infrastructure.EF.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CleanArch.Infrastructure.EF.Migrations.PostgresMigrations
{
    [DbContext(typeof(ReadDbContext))]
    partial class ReadDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("cleanArch")
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CleanArch.Infrastructure.EF.Models.UserAddressReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserReadModelId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserReadModelId");

                    b.ToTable("UserAddresses", "cleanArch");
                });

            modelBuilder.Entity("CleanArch.Infrastructure.EF.Models.UserReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users", "cleanArch");
                });

            modelBuilder.Entity("CleanArch.Infrastructure.EF.Models.UserAddressReadModel", b =>
                {
                    b.HasOne("CleanArch.Infrastructure.EF.Models.UserReadModel", "UserReadModel")
                        .WithMany("UserAddresses")
                        .HasForeignKey("UserReadModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserReadModel");
                });

            modelBuilder.Entity("CleanArch.Infrastructure.EF.Models.UserReadModel", b =>
                {
                    b.Navigation("UserAddresses");
                });
#pragma warning restore 612, 618
        }
    }
}
